{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{256:function(s,t,a){\"use strict\";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"div\",{staticClass:\"custom-block warning\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"注：\")]),s._v(\" \"),a(\"p\",[s._v(\"本文是对《你不知道的JavaScript（上卷）》的浓缩总结，已经看过的童鞋可以简单再过一遍，没看过的童鞋建议仔细阅读\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"前言\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[s._v(\"#\")]),s._v(\" 前言\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"每当我们看完各种面试宝典，知识点总结，以为掌握了某些概念之后，有没有去想过，这种“掌握”是否真能学以致用。当你将通过面试作为学习的目的以后，你会频频体会到知其然不知其所以然的滋味。看完《你不知道的JavaScript（上卷）》之后，让我对很多知识点有了通透的理解，遂将自己的理解结合书本整理分享给各位可能有我上述所描述问题的童鞋，也欢迎大佬们补充指正。\")])]),s._v(\" \"),a(\"p\",[s._v(\"读完本文，希望你可以对如下几个知识点，从编译原理的基础上，有一种通透的理解：\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"作用域\")]),s._v(\" \"),a(\"li\",[s._v(\"词法作用域\")]),s._v(\" \"),a(\"li\",[s._v(\"变量提升\")]),s._v(\" \"),a(\"li\",[s._v(\"作用域闭包\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"何为作用域\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#何为作用域\"}},[s._v(\"#\")]),s._v(\" 何为作用域\")]),s._v(\" \"),a(\"p\",[s._v(\"在js中（\"),a(\"code\",[s._v(\"ES6\")]),s._v(\"版本后）一般会存在3种作用域\")]),s._v(\" \"),a(\"blockquote\",[a(\"ul\",[a(\"li\",[s._v(\"全局作用域\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"作用于所有代码执行的环境(整个 script 标签内部)，或者一个独立的 js 文件\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"函数作用域\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"作用于函数内的代码环境，仅在该函数内部可以访问\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"块作用域\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"let和const创建的作用域\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"eval作用域\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"仅在严格模式下存在，下一章会讨论\")])])]),s._v(\" \"),a(\"p\",[s._v(\"作用域的概念想必大家一定都能倒背如流，即：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"作用域就是一套规则，用于确定\"),a(\"code\",[s._v(\"在何处\")]),s._v(\"以及\"),a(\"code\",[s._v(\"如何查找\")]),s._v(\"变量（标识符）的规则\")])]),s._v(\" \"),a(\"p\",[s._v(\"这里我们注意到有两个关键词\"),a(\"code\",[s._v(\"在何处\")]),s._v(\"以及\"),a(\"code\",[s._v(\"如何查找\")]),s._v(\"，下面我们就把js的执行拆开成\"),a(\"code\",[s._v(\"编译时\")]),s._v(\"和\"),a(\"code\",[s._v(\"运行时\")]),s._v(\"两个维度，来看看这两个维度分别做了些什么，\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"在其中又是如何将\"),a(\"code\",[s._v(\"在何处\")]),s._v(\"以及\"),a(\"code\",[s._v(\"如何查找\")]),s._v(\"实现的\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"编译时\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编译时\"}},[s._v(\"#\")]),s._v(\" 编译时\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block warning\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"注：\")]),s._v(\" \"),a(\"p\",[s._v(\"首先JavaScript到底是解释型语言还是编译型语言，这里不做过多讨论，因为它同时具有两种类型的特性，本文按照《你不知道的JavaScript（上卷）》中的定义，将其解释为一种特殊的编译形语言来理解即可，编译时也可以理解为预编译时\")])]),s._v(\" \"),a(\"p\",[s._v(\"在传统编译语言的流程中，程序中的一段源代码在执行之前会经历三个步骤，统称为“编译”：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"分词/词法分析（Tokenizing/Lexing）\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"例如，考虑程序\"),a(\"code\",[s._v(\"var a = 1;\")]),s._v(\"。这段程序通常会被分解成为下面这些词法单元：\"),a(\"code\",[s._v(\"var\")]),s._v(\"、\"),a(\"code\",[s._v(\"a\")]),s._v(\"、\"),a(\"code\",[s._v(\"=\")]),s._v(\"、\"),a(\"code\",[s._v(\"1\")]),s._v(\" 、\"),a(\"code\",[s._v(\";\")]),s._v(\"。\")])]),s._v(\" \"),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[s._v(\"解析/语法分析（Parsing）\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"这个过程是将步骤1得到的词法单元流转换成一个由元素逐级嵌套所组成的代表了程序语法结构的树，就是大家所熟知的\"),a(\"code\",[s._v(\"AST抽象语法树\")]),s._v(\"。\")])]),s._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[s._v(\"代码生成\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"将AST转换为可执行代码的过程，例如\"),a(\"code\",[s._v(\"var a = 1;\")]),s._v(\"的AST转化为一组机器指令，用来创建一个叫作\"),a(\"code\",[s._v(\"a\")]),s._v(\"的变量（包括分配内存等），并将一个值储存在\"),a(\"code\",[s._v(\"a\")]),s._v(\"中。\")])]),s._v(\" \"),a(\"p\",[s._v(\"引用原文里的总结就是：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"任何JavaScript代码片段在执行前都要进行编译（通常就在执行前）。因此，JavaScript编译器首先会对\"),a(\"code\",[s._v(\"var a = 1;\")]),s._v(\"这段程序进行编译，然后做好执行它的准备，并且通常马上就会执行它。\")])]),s._v(\" \"),a(\"p\",[s._v(\"这里我们着重看一下\"),a(\"code\",[s._v(\"var a\")]),s._v(\"这个声明，当编译器发现这类声明时，会询问\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"是否已经有一个该名称的变量存在于同一个\"),a(\"code\",[s._v(\"作用域集合\")]),s._v(\"中。如果是，编译器会忽略该声明，继续进行编译；否则它会要求\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"在当前\"),a(\"code\",[s._v(\"作用域集合\")]),s._v(\"中声明一个新的变量，并命名为\"),a(\"code\",[s._v(\"a\")]),s._v(\"。\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"看到这里是否你就可以理解，为什么js在运行时，可以提前调用之后声明的变量\"),a(\"code\",[s._v(\"（变量提升）\")]),s._v(\",因为变量声明在\"),a(\"code\",[s._v(\"编译时\")]),s._v(\"就已经完成了，所以\"),a(\"code\",[s._v(\"运行时\")]),s._v(\"可以通过\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"找到该变量\")])]),s._v(\" \"),a(\"p\",[s._v(\"看到这里其实我们可以知道，对变量的创建（包括分配内存等）其实是在编译过程中就完成了，而这个过程中，我们的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"其实就已经参与了进来，他会记得这些变量\"),a(\"code\",[s._v(\"在何处\")]),s._v(\"，那么记得以后要\"),a(\"code\",[s._v(\"如何查找\")]),s._v(\"呢，我们接着往下看\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"运行时\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运行时\"}},[s._v(\"#\")]),s._v(\" 运行时\")]),s._v(\" \"),a(\"p\",[s._v(\"同样以\"),a(\"code\",[s._v(\"var a = 1;\")]),s._v(\"为例，引擎运行时会首先询问\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"，在当前的\"),a(\"code\",[s._v(\"作用域集合\")]),s._v(\"中（一段程序中可能会有多个\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"，例如代码在函数内执行就是\"),a(\"code\",[s._v(\"当前函数作用域\")]),s._v(\"）是否存在一个叫作\"),a(\"code\",[s._v(\"a\")]),s._v(\"的变量。如果有则直接使用这个变量；如果没有则会继续查找该变量（聪明的你应该已经猜到了这就需要用到\"),a(\"code\",[s._v(\"作用域链\")]),s._v(\"了，这块我们之后再分析）。如果引擎最终找到了\"),a(\"code\",[s._v(\"a\")]),s._v(\"变量，就会将1赋值给它。否则引擎就会抛出一个\"),a(\"code\",[s._v(\"ReferenceError\")]),s._v(\"异常（关于异常后面会专门讲）。\")]),s._v(\" \"),a(\"p\",[s._v(\"那么\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"是如何找到变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"的呢，这就聊到了我面要讲的第二个关键词\"),a(\"code\",[s._v(\"如何查找\")])]),s._v(\" \"),a(\"p\",[a(\"code\",[s._v(\"作用域\")]),s._v(\"会协助引擎通过\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"或\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"进行变量查找\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[s._v(\"LHS\")]),s._v(\"查询是找到变量的容器本身，\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"查询是取得变量的源值\")])]),s._v(\" \"),a(\"p\",[s._v(\"例如\"),a(\"code\",[s._v(\"var a = b;\")]),s._v(\"，首先通过\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"找到变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"，再通过\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"找到变量\"),a(\"code\",[s._v(\"b\")]),s._v(\"的值，最后将\"),a(\"code\",[s._v(\"b\")]),s._v(\"的值赋值给变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"。\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"对何时使用\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"或\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"，一种比较好的理解方式就是：“赋值操作的目标是谁\"),a(\"code\",[s._v(\"（LHS）\")]),s._v(\"”以及“谁是赋值操作的源头\"),a(\"code\",[s._v(\"（RHS）\")]),s._v(\"”\")])]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block warning\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"注：\")]),s._v(\" \"),a(\"p\",[s._v(\"这里对于LHS或RHS只做一个概述，有兴趣的可以看看原文里的解读\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"作用域嵌套\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#作用域嵌套\"}},[s._v(\"#\")]),s._v(\" 作用域嵌套\")]),s._v(\" \"),a(\"p\",[s._v(\"当一个块或函数嵌套在另一个块或函数中时，就发生了作用域的嵌套。\")]),s._v(\" \"),a(\"p\",[s._v(\"上一节提到了如果\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"在\"),a(\"code\",[s._v(\"当前作用域集合\")]),s._v(\"中没有找到要查找的变量会继续查找，其实就是在外层嵌套的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"中继续查找，直到找到该变量，或抵达最外层的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"（也就是\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"）为止。\")]),s._v(\" \"),a(\"p\",[s._v(\"例如：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"blockquote\",[a(\"p\",[s._v(\"变量a嵌套在了函数fn的作用域中，当js引擎通过\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"（回忆一下为什么是\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"）查找变量a进行输出时，\"),a(\"code\",[s._v(\"当前作用域\")]),s._v(\"发现没有这个变量，就会去\"),a(\"code\",[s._v(\"外层作用域\")]),s._v(\"查找，最后在\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"中找到了变量a\")])]),s._v(\" \"),a(\"p\",[s._v(\"这种作用域一层层嵌套形成的链路，我们就称之为\"),a(\"code\",[s._v(\"作用域链\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"关于异常\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于异常\"}},[s._v(\"#\")]),s._v(\" 关于异常\")]),s._v(\" \"),a(\"p\",[s._v(\"我们都知道，在\"),a(\"code\",[s._v(\"非严格模式\")]),s._v(\"下，当我们为一个未定义的变量赋值时，会隐式的创建一个全局变量\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//1\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"而在\"),a(\"code\",[s._v(\"严格模式\")]),s._v(\"时，会抛出\"),a(\"code\",[s._v(\"ReferenceError\")]),s._v(\"异常\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"use strict\"')]),s._v(\"\\na \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"回忆一下变量的查询方式，不难知道这里使用的是\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"查询，在严格与非严格模式下表现是不同的\")]),s._v(\" \"),a(\"p\",[s._v(\"那如果我们是直接使用一个未声明的变量呢？\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"use strict\"')]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"回忆一下变量的查询方式，不难知道这里使用的是\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"查询，在严格与非严格模式下表现是相同的\")]),s._v(\" \"),a(\"p\",[s._v(\"如果RHS查询找到了一个变量，但是你尝试对这个变量的值进行不合理的操作，比如试图对一个非函数类型的值进行函数调用，或者调用该变量不存在的方法等，就会抛出\"),a(\"code\",[s._v(\"TypeError\")]),s._v(\"异常\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//TypeError\")]),s._v(\"\\na\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sort\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//TypeError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"引用原文里的总结就是：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"ReferenceError同作用域判别失败相关，而TypeError则代表作用域判别成功了，但是对结果的操作是非法或不合理的。\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"总结\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\"}},[s._v(\"#\")]),s._v(\" 总结\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[s._v(\"编译器在\"),a(\"code\",[s._v(\"编译时\")]),s._v(\"对变量进行声明，\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"此时会记得这些变量\"),a(\"code\",[s._v(\"在何处\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"js引擎在\"),a(\"code\",[s._v(\"运行时\")]),s._v(\"会在\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"的协助下，通过\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"或\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"查询取得变量或其源值\"),a(\"code\",[s._v(\"（所谓的如何查找）\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"查找时会通过\"),a(\"code\",[s._v(\"作用域链\")]),s._v(\"在\"),a(\"code\",[s._v(\"嵌套作用域\")]),s._v(\"中一层层查找，直到找到\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"为止\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"不成功的\"),a(\"code\",[s._v(\"RHS\")]),s._v(\"引用会抛出\"),a(\"code\",[s._v(\"ReferenceError\")]),s._v(\"异常。不成功的\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"引用会隐式地创建一个全局变量\"),a(\"code\",[s._v(\"（非严格模式下）\")]),s._v(\"，或者抛出\"),a(\"code\",[s._v(\"ReferenceError\")]),s._v(\"异常\"),a(\"code\",[s._v(\"（严格模式下）\")]),s._v(\"。\")])])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"词法作用域\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#词法作用域\"}},[s._v(\"#\")]),s._v(\" 词法作用域\")]),s._v(\" \"),a(\"p\",[s._v(\"引用原文中的概念：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"简单地说，\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"就是定义在词法阶段的作用域。换句话说，\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"是由你在写代码时将变量和函数写在哪里来决定的，因此当词法分析器处理代码时会保持\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"不变（大部分情况下是这样的）。\")])]),s._v(\" \"),a(\"p\",[s._v(\"如果说\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"就是一套规则，\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"就是\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"的一种工作模型，一种在词法阶段的就定义的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"词法阶段\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#词法阶段\"}},[s._v(\"#\")]),s._v(\" 词法阶段\")]),s._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/4/13/171730b87563d2dc?w=273&h=172&f=png&s=9222\",alt:\"\"}}),s._v(\"\\n如图所示的代码片段有3个逐级嵌套的作用域\"),a(\"code\",[s._v(\"A\")]),s._v(\"、\"),a(\"code\",[s._v(\"B\")]),s._v(\"、\"),a(\"code\",[s._v(\"C\")]),s._v(\"。由于\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"在写代码时就定义好了，因此在执行\"),a(\"code\",[s._v(\"C\")]),s._v(\"内部\"),a(\"code\",[s._v(\"console\")]),s._v(\"时，会首先在当前\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"内寻找\"),a(\"code\",[s._v(\"a\")]),s._v(\"、\"),a(\"code\",[s._v(\"b\")]),s._v(\"、\"),a(\"code\",[s._v(\"c\")]),s._v(\"三个变量，如果找不到再通过\"),a(\"code\",[s._v(\"作用域链\")]),s._v(\"逐级向上查找。因此首先在\"),a(\"code\",[s._v(\"C\")]),s._v(\"内找到了变量\"),a(\"code\",[s._v(\"c\")]),s._v(\"，再向上在\"),a(\"code\",[s._v(\"B\")]),s._v(\"内找到了变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"和\"),a(\"code\",[s._v(\"b\")]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[s._v(\"这里我们思考一个问题，如果我在\"),a(\"code\",[s._v(\"C\")]),s._v(\"内重新定义了\"),a(\"code\",[s._v(\"a\")]),s._v(\"会怎么样\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" b \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"inner\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"c\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"b\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"c\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"inner\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"b\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\")])]),a(\"p\",[s._v(\"答案是会直接使用\"),a(\"code\",[s._v(\"C\")]),s._v(\"内的变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"，原因是\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"查找始终从运行时所处的最内部\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"开始，直到遇见第一个匹配的标识符为止。这里就产生了\"),a(\"code\",[s._v(\"遮蔽效应\")]),s._v(\"（内部的标识符“遮蔽”了外部的标识符）。也就意味着在\"),a(\"code\",[s._v(\"C\")]),s._v(\"内永远无法访问到\"),a(\"code\",[s._v(\"B\")]),s._v(\"内的变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"。除非被遮蔽的变量在\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"内，则可以通过\"),a(\"code\",[s._v(\"window.xxx\")]),s._v(\"来访问。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"欺骗词法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#欺骗词法\"}},[s._v(\"#\")]),s._v(\" 欺骗词法\")]),s._v(\" \"),a(\"p\",[s._v(\"前面讲到\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"是在词法阶段就确定了的，那么有没有可能在运行时来“修改”（也可以说欺骗）\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"呢？答案是可以，但是完全不推荐！\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"eval\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#eval\"}},[s._v(\"#\")]),s._v(\" eval\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block warning\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"注：\")]),s._v(\" \"),a(\"p\",[s._v(\"以下讨论仅在非严格模式内\")])]),s._v(\" \"),a(\"p\",[s._v(\"引用原文里的描述：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[s._v(\"eval(..)\")]),s._v(\"函数可以接受一个字符串为参数，并将其中的内容视为好像在书写时就存在于程序中这个位置的代码。换句话说，可以在你写的代码中用程序生成代码并运行，就好像代码是写在那个位置的一样。\")])]),s._v(\" \"),a(\"p\",[s._v(\"我们通过一段代码来理解一下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"b\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" b \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"eval\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"var b = 3\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//1,3\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"由于\"),a(\"code\",[s._v(\"eval\")]),s._v(\"内重新声明了变量\"),a(\"code\",[s._v(\"b\")]),s._v(\"，通过\"),a(\"code\",[s._v(\"遮蔽效应\")]),s._v(\"导致输出的\"),a(\"code\",[s._v(\"b\")]),s._v(\"变成了\"),a(\"code\",[s._v(\"3\")])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"with\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#with\"}},[s._v(\"#\")]),s._v(\" with\")]),s._v(\" \"),a(\"p\",[a(\"code\",[s._v(\"with\")]),s._v(\"通常被当作重复引用同一个对象中的多个属性的快捷方式，可以不需要重复引用对象本身。他有一个副作用，会将变量泄漏到\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"。这里具体不做展开，因为\"),a(\"code\",[s._v(\"with\")]),s._v(\"其实非常冷门且不推荐使用，而且在严格模式已经被完全禁止了，有兴趣了解的童鞋可以看看原文中的解释。\")]),s._v(\" \"),a(\"h4\",{attrs:{id:\"性能影响\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#性能影响\"}},[s._v(\"#\")]),s._v(\" 性能影响\")]),s._v(\" \"),a(\"p\",[a(\"code\",[s._v(\"eval\")]),s._v(\"和\"),a(\"code\",[s._v(\"with\")]),s._v(\"为什么不建议使用，很大原因就是对性能有影响，这里原文解释的比较清楚：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"JavaScript引擎会在编译阶段进行数项的性能优化。其中有些优化依赖于能够根据代码的词法进行静态分析，并预先确定所有变量和函数的定义位置，才能在执行过程中快速找到标识符。但如果引擎在代码中发现了\"),a(\"code\",[s._v(\"eval(..)\")]),s._v(\"或\"),a(\"code\",[s._v(\"with\")]),s._v(\"，它只能简单地假设关于标识符位置的判断都是无效的，因为无法在词法分析阶段明确知道\"),a(\"code\",[s._v(\"eval(..)\")]),s._v(\"会接收到什么代码，这些代码会如何对作用域进行修改，也无法知道传递给with用来创建新词法作用域的对象的内容到底是什么。最悲观的情况是如果出现了\"),a(\"code\",[s._v(\"eval(..)\")]),s._v(\"或\"),a(\"code\",[s._v(\"with\")]),s._v(\"，所有的优化可能都是无意义的，因此最简单的做法就是完全不做任何优化。如果代码中大量使用\"),a(\"code\",[s._v(\"eval(..)\")]),s._v(\"或\"),a(\"code\",[s._v(\"with\")]),s._v(\"，那么运行起来一定会变得非常慢。无论引擎多聪明，试图将这些悲观情况的副作用限制在最小范围内，也无法避免如果没有这些优化，代码会运行得更慢这个事实。\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"总结-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结-2\"}},[s._v(\"#\")]),s._v(\" 总结\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"词法作用域\")]),s._v(\"是由函数及变量声明的位置来决定的，在执行过程中也会以此为\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"基准进行\"),a(\"code\",[s._v(\"LHS\")]),s._v(\"和\"),a(\"code\",[s._v(\"RHS\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"可以通过\"),a(\"code\",[s._v(\"eval(..)\")]),s._v(\"和\"),a(\"code\",[s._v(\"with\")]),s._v(\"对\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"进行“欺骗”(非严格模式)\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"词法欺骗的副作用是导致js引擎性能优化失效，使程序运行变慢，因此不建议使用\")])])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"函数作用域和块作用域\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数作用域和块作用域\"}},[s._v(\"#\")]),s._v(\" 函数作用域和块作用域\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"函数作用域\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数作用域\"}},[s._v(\"#\")]),s._v(\" 函数作用域\")]),s._v(\" \"),a(\"p\",[s._v(\"借用上一节的图片\\n\"),a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/4/13/171730b87563d2dc?w=273&h=172&f=png&s=9222\",alt:\"\"}}),s._v(\"\\n我们了解了\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"的概念之后，就知道函数fn在声明时就确认了自己的\"),a(\"code\",[s._v(\"作用域B\")]),s._v(\"，该\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"就是\"),a(\"code\",[s._v(\"函数作用域\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[s._v(\"函数作用域\")]),s._v(\"由函数在声明时所处的位置决定，与其在哪里被调用以及如何被调用无关\")])]),s._v(\" \"),a(\"p\",[s._v(\"属于这个函数的全部变量都可以在整个函数的范围内使用及复用，而在函数之外是无法被访问的，这个特性有一个非常好的作用。这里我们再引申出一个概念：\"),a(\"code\",[s._v(\"最小特权原则\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"code\",[s._v(\"最小特权原则\")]),s._v(\"，也叫最小授权或最小暴露原则。这个原则是指在软件设计中，应该最小限度地暴露必要内容，而将其他内容都“隐藏”起来，比如某个模块或对象的API设计\")])]),s._v(\" \"),a(\"p\",[s._v(\"设想一个这样的场景，我们需要向小明借钱\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" money \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"money\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" money\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"money\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//100\")]),s._v(\"\\nmoney \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1000000\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//1000000\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5000000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//5000000\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\")])]),a(\"p\",[s._v(\"不难发现我们只要修改\"),a(\"code\",[s._v(\"money\")]),s._v(\"的值便可以像小明借任意的钱，甚至我们可以不经过小明允许直接\"),a(\"code\",[s._v(\"borrowMoney(money)\")]),s._v(\"拿钱，显然这是不合理的。我们希望的是外部没有对\"),a(\"code\",[s._v(\"money\")]),s._v(\"和\"),a(\"code\",[s._v(\"borrowMoney\")]),s._v(\"的访问权限，他们应该是属于小明的私有变量，这时就需要\"),a(\"code\",[s._v(\"函数作用域\")]),s._v(\"出马了，按照\"),a(\"code\",[s._v(\"最小特权原则\")]),s._v(\"，将\"),a(\"code\",[s._v(\"money\")]),s._v(\"和\"),a(\"code\",[s._v(\"borrowMoney\")]),s._v(\"“隐藏”起来\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" money \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"money\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" money\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"money\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//100\")]),s._v(\"\\nmoney \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1000000\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//严格模式会ReferenceError\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//100\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5000000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\")])]),a(\"h4\",{attrs:{id:\"立即执行函数表达式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#立即执行函数表达式\"}},[s._v(\"#\")]),s._v(\" 立即执行函数表达式\")]),s._v(\" \"),a(\"p\",[s._v(\"假设我们现在的场景是，我们的程序运行过程中只需要借一次钱，且不care到底是问谁借，那么原来的写法其实有两点没有必要，一个是创建了一个具名函数\"),a(\"code\",[s._v(\"xiaoming\")]),s._v(\"，该名称本身会“污染”所在\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"（即在\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"中声明了一个不需要日后再被调用的函数名\"),a(\"code\",[s._v(\"xiaoming\")]),s._v(\"），另外还需要显示的调用函数\"),a(\"code\",[s._v(\"xiaoming\")])]),s._v(\" \"),a(\"p\",[s._v(\"如果函数不需要函数名（至少不“污染”所在\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"），并且能够自动运行，将会更加理想，好在js提供了能够同时解决这两个问题的方案：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" money \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"money\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" money\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"borrowMoney\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"money\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//100\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"p\",[s._v(\"上述代码通过括号包裹住函数\"),a(\"code\",[s._v(\"xiaoming\")]),s._v(\"创建了\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"，再通过()执行该表达式，且虽然我们依旧声明了函数名\"),a(\"code\",[s._v(\"xiaoming\")]),s._v(\"（为了体现不会污染所在\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"，实际可以直接写匿名函数），但该名称并未“污染”\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"，而是绑定在\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"自身函数中，仅在\"),a(\"code\",[s._v(\"function\")]),s._v(\"内部可以被访问，也就是说：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    ···\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//可以访问\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//100\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"blockquote\",[a(\"p\",[s._v(\"区分\"),a(\"code\",[s._v(\"函数声明\")]),s._v(\"和\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"最简单的方法是看\"),a(\"code\",[s._v(\"function\")]),s._v(\"关键字出现在声明中的位置（不仅仅是一行代码，而是整个声明中的位置）。如果\"),a(\"code\",[s._v(\"function\")]),s._v(\"是声明中的第一个词，那么就是一个\"),a(\"code\",[s._v(\"函数声明\")]),s._v(\"，否则就是一个\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"。\")])]),s._v(\" \"),a(\"p\",[s._v(\"从概念我们就可以知道，为什么如下写法，都可以创建\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"并立即执行（某些非主流写法不建议使用）：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"···\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"···\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"xiaoming\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"···\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"块作用域\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#块作用域\"}},[s._v(\"#\")]),s._v(\" 块作用域\")]),s._v(\" \"),a(\"p\",[s._v(\"实际在\"),a(\"code\",[s._v(\"ES6\")]),s._v(\"出现之前，JavaScript里并没有严格的\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"，但是有些语法也会创建\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"，后面会讲到\")]),s._v(\" \"),a(\"p\",[s._v(\"下面这段代码大家一定不陌生\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//0,1,2,3,4,5,6,7,8,9\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//10\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"此时变量i实际上是声明在了\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"中，但其实这是完全没有必要的，反而会对全局造成“污染”\")]),s._v(\" \"),a(\"p\",[s._v(\"于是在\"),a(\"code\",[s._v(\"ES6\")]),s._v(\"推出了\"),a(\"code\",[s._v(\"let\")]),s._v(\"和\"),a(\"code\",[s._v(\"const\")]),s._v(\"关键字，彻底解决这了一问题\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"let关键字可以将变量绑定到所在的任意作用域中（通常是{ .. }内部）。换句话说，let为其声明的变量隐式地劫持了所在的块作用域。\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//0,1,2,3,4,5,6,7,8,9\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"还记得一道常见的面试题吗？\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出10个10\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"现在是否就很容易理解，为什么是10个10了吧。当\"),a(\"code\",[s._v(\"setTimeout\")]),s._v(\"的\"),a(\"code\",[s._v(\"宏任务\")]),s._v(\"执行的时候，for循环在主线程已经执行完毕（不理解的需要去补习下\"),a(\"code\",[s._v(\"事件循环\")]),s._v(\"机制），因此在执行\"),a(\"code\",[s._v(\"console.log\")]),s._v(\"时\"),a(\"code\",[s._v(\"i\")]),s._v(\"的值已经是10了，然后在\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"中找到\"),a(\"code\",[s._v(\"i\")]),s._v(\"之后进行输出\")]),s._v(\" \"),a(\"p\",[s._v(\"如果使用\"),a(\"code\",[s._v(\"let\")]),s._v(\"形成\"),a(\"code\",[s._v(\"块级作用域\")]),s._v(\"，就能得到理想中的输出结果\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出0,1,2,3,4,5,6,7,8,9\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"这段代码可能不方便理解，那么换一种写法大家就能看懂\"),a(\"code\",[s._v(\"块级作用域\")]),s._v(\"是如何运作的：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" j\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"j\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"j \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"j\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" j\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\")])]),a(\"p\",[s._v(\"从代码可以看出，在每一次\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环内，其实都隐式的绑定了一次变量\"),a(\"code\",[s._v(\"i\")]),s._v(\"，且该变量仅在\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"内部可访问，在执行\"),a(\"code\",[s._v(\"console.log\")]),s._v(\"时访问的是\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"内部该次循环所绑定的\"),a(\"code\",[s._v(\"i\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"for循环头部的let不仅将i绑定到了for循环的块中，事实上它将其重新绑定到了循环的每一个迭代中，确保使用上一个循环迭代结束时的值重新进行赋值。\")])]),s._v(\" \"),a(\"p\",[s._v(\"除了\"),a(\"code\",[s._v(\"let\")]),s._v(\"以外，\"),a(\"code\",[s._v(\"ES6\")]),s._v(\"还引入了\"),a(\"code\",[s._v(\"const\")]),s._v(\"，同样可以用来创建\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"变量，唯一的区别是\"),a(\"code\",[s._v(\"const\")]),s._v(\"的值不允许被修改\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"总结-3\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结-3\"}},[s._v(\"#\")]),s._v(\" 总结\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"函数作用域\")]),s._v(\"是JavaScript中最常见的作用域单元，可以通过\"),a(\"code\",[s._v(\"最小特权原则\")]),s._v(\"将内部变量“隐藏”起来\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"可以通过括号包裹等方式创建\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"并\"),a(\"code\",[s._v(\"立即执行\")]),s._v(\"，在特定场合下减少全局“污染”和代码量\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"ES6\")]),s._v(\"引入和\"),a(\"code\",[s._v(\"let\")]),s._v(\"和\"),a(\"code\",[s._v(\"const\")]),s._v(\"关键字，可以在所在代码块\"),a(\"code\",[s._v(\"{···}\")]),s._v(\"内部创建\"),a(\"code\",[s._v(\"块级作用域\")])])])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"提升\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#提升\"}},[s._v(\"#\")]),s._v(\" 提升\")]),s._v(\" \"),a(\"p\",[s._v(\"关于变量提升，也是一个老生常谈的问题，想必大家都知道有这么一种机制，但是至于为什么，不一定十分理解，没关系，看完本章你会明白透彻\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"var提升\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#var提升\"}},[s._v(\"#\")]),s._v(\" var提升\")]),s._v(\" \"),a(\"p\",[s._v(\"考虑以下代码：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//1\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"输出的结果并非语义上理解的\"),a(\"code\",[s._v(\"undefined\")]),s._v(\"，而是\"),a(\"code\",[s._v(\"1\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//undefined\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"输出的结果并非语义上理解的报错，而是\"),a(\"code\",[s._v(\"undefined\")])]),s._v(\" \"),a(\"p\",[s._v(\"为什么会出现上面的结果呢，我们就要从\"),a(\"code\",[s._v(\"编译阶段\")]),s._v(\"来理解其中的本质原因了\")]),s._v(\" \"),a(\"p\",[s._v(\"通过前面的学习我们已经知道，任何JavaScript代码片段在执行前都要进行\"),a(\"code\",[s._v(\"编译\")]),s._v(\"（通常就在执行前）。\"),a(\"code\",[s._v(\"编译阶段\")]),s._v(\"中的一部分工作就是找到所有的\"),a(\"code\",[s._v(\"声明\")]),s._v(\"，并用合适的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"将它们关联起来。引用原文的描述就是：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"包括变量和函数在内的所有声明都会在任何代码被执行前首先被处理。\")])]),s._v(\" \"),a(\"p\",[s._v(\"因此第一段代码按照\"),a(\"code\",[s._v(\"编译\")]),s._v(\"和\"),a(\"code\",[s._v(\"执行\")]),s._v(\"的正确处理顺序如下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//编译阶段先处理变量a的声明\")]),s._v(\"\\na \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//1\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"代码按照\"),a(\"code\",[s._v(\"编译\")]),s._v(\"和\"),a(\"code\",[s._v(\"执行\")]),s._v(\"的正确处理顺序如下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//编译阶段先处理变量a的声明\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//undefined\")]),s._v(\"\\na \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//赋值操作不会被提升\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"函数提升\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数提升\"}},[s._v(\"#\")]),s._v(\" 函数提升\")]),s._v(\" \"),a(\"p\",[s._v(\"对于函数来说也同样如此，且\"),a(\"code\",[s._v(\"函数作用域\")]),s._v(\"内部的声明的变量同样会在该\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"内部被首先处理：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//正常执行\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//undefined\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"代码按照\"),a(\"code\",[s._v(\"编译\")]),s._v(\"和\"),a(\"code\",[s._v(\"执行\")]),s._v(\"的正确处理顺序如下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//编译阶段先处理fn的声明\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//编译阶段先处理变量a的声明\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//undefined\")]),s._v(\"\\n    a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//赋值操作不会被提升\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//正常执行\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\")])]),a(\"blockquote\",[a(\"p\",[s._v(\"变量和函数声明从它们在代码中出现的位置被“移动”到了最上面。这个过程就叫作\"),a(\"code\",[s._v(\"提升\")]),s._v(\"。\")])]),s._v(\" \"),a(\"h4\",{attrs:{id:\"同名时的提升\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同名时的提升\"}},[s._v(\"#\")]),s._v(\" 同名时的提升\")]),s._v(\" \"),a(\"p\",[s._v(\"这里我们引申一下，如果同时声明了同名的变量和函数会怎么样呢？比如如下代码：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出函数a\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"···\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"在\"),a(\"code\",[s._v(\"编译\")]),s._v(\"阶段，函数的优先级比普通变量要高，因此会被\"),a(\"code\",[s._v(\"优先声明\")]),s._v(\"，代码按照\"),a(\"code\",[s._v(\"编译\")]),s._v(\"和\"),a(\"code\",[s._v(\"执行\")]),s._v(\"的正确处理顺序如下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"···\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//编译阶段先处理a的声明\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//回忆我们第一章讲到的，遇到已声明过的变量a，忽略该声明，继续进行编译\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出函数a\")]),s._v(\"\\na \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//赋值操作不会被提升\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果是重复声明同名函数呢：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出2，后声明的函数a会覆盖之前的，尽管a已经被声明过\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"h4\",{attrs:{id:\"函数表达式的提升\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数表达式的提升\"}},[s._v(\"#\")]),s._v(\" 函数表达式的提升\")]),s._v(\" \"),a(\"p\",[s._v(\"我们再做另一个引申，有时候我们会通过\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"的方式来定义一个\"),a(\"code\",[s._v(\"function\")]),s._v(\"，那如果提前调用会怎样呢：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//TypeError\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[s._v(\"fn\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"···\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"造成这种结果是由于\"),a(\"code\",[s._v(\"函数\")]),s._v(\"在\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"中并不会被\"),a(\"code\",[s._v(\"提升\")]),s._v(\"，只是类似一个赋值语句，可以类比成函数\"),a(\"code\",[s._v(\"a\")]),s._v(\"就是一个值，这个值不需要提前声明，因此\"),a(\"code\",[s._v(\"a\")]),s._v(\"也无法提前执行，而变量\"),a(\"code\",[s._v(\"fn\")]),s._v(\"声明了但是还没有赋值，所以也无法通过\"),a(\"code\",[s._v(\"()\")]),s._v(\"来执行，代码按照\"),a(\"code\",[s._v(\"编译\")]),s._v(\"和\"),a(\"code\",[s._v(\"执行\")]),s._v(\"的正确处理顺序如下：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" fn   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//编译阶段先处理fn的声明\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//相当于undefined()，从之前对异常的介绍可以知道，属于非法操作因此会报TypeError\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"a\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//未找到a的声明，因此会报ReferenceError\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[s._v(\"fn\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//赋值操作不会被提升\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"...\")]),s._v(\"self\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"...\")]),s._v(\"\\n    ···\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"h4\",{attrs:{id:\"暂时死区\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#暂时死区\"}},[s._v(\"#\")]),s._v(\" 暂时死区\")]),s._v(\" \"),a(\"p\",[s._v(\"想必大家对于\"),a(\"code\",[s._v(\"暂时死区\")]),s._v(\"都不陌生，实际上就是由于\"),a(\"code\",[s._v(\"let\")]),s._v(\"和\"),a(\"code\",[s._v(\"const\")]),s._v(\"不会被\"),a(\"code\",[s._v(\"提升\")]),s._v(\"导致的，因此就会有如下代码的输出：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[a(\"code\",[s._v(\"ES6\")]),s._v(\"标准中对\"),a(\"code\",[s._v(\"let/const\")]),s._v(\"声明中的解释，\"),a(\"a\",{attrs:{href:\"http://www.ecma-international.org/ecma-262/6.0/#sec-let-and-const-declarations\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"第13章\"),a(\"OutboundLink\")],1),s._v(\"中有如下一段文字：\\n\"),a(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2020/4/16/171827640344ac62?w=910&h=240&f=png&s=41803\",alt:\"\"}}),s._v(\"\\n关于暂时死区的描述大致意思就是：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"当程序的控制流程在新的作用域（module function 或 block 作用域）进行实例化时，在此作用域中用let/const声明的变量会先在作用域中被创建出来，但因此时还未进行词法绑定，所以是不能被访问的，如果访问就会抛出错误。因此，在运行流程进入作用域创建变量，到变量可以被访问之间的这一段时间，就称之为暂时死区。\")])]),s._v(\" \"),a(\"p\",[s._v(\"从我个人的理解就是，\"),a(\"code\",[s._v(\"let\")]),s._v(\"声明的变量，在\"),a(\"code\",[s._v(\"编译阶段\")]),s._v(\"是会被创建的，但是不会绑定在\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"中，类似形成了一个隐形的\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"，无法被外部访问，只有当运行时代码执行到了变量声明的位置时，才会放开访问权限\")]),s._v(\" \"),a(\"p\",[s._v(\"上述代码可以描述成类似下面这样一段代码：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" a   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//提前创建变量a，但无法被访问\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//ReferenceError\")]),s._v(\"\\na \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//放开对a的访问权限，并赋值\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"看到这里想必大家已经对\"),a(\"code\",[s._v(\"变量提升\")]),s._v(\"有了透彻的理解，达到了所谓的通透。再随便给你一段代码，也能按照\"),a(\"code\",[s._v(\"编译\")]),s._v(\"和\"),a(\"code\",[s._v(\"执行\")]),s._v(\"的阶段分析出正确的处理顺序了吧\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"总结-4\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结-4\"}},[s._v(\"#\")]),s._v(\" 总结\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[s._v(\"一个简单的赋值语句，被拆开成两部分进行，第一部分在\"),a(\"code\",[s._v(\"编译阶段\")]),s._v(\"完成对\"),a(\"code\",[s._v(\"变量\")]),s._v(\"和\"),a(\"code\",[s._v(\"函数\")]),s._v(\"的声明，就是所谓的\"),a(\"code\",[s._v(\"提升\")]),s._v(\"，第二部分在\"),a(\"code\",[s._v(\"执行阶段\")]),s._v(\"完成对变量的赋值\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"声明本身会被\"),a(\"code\",[s._v(\"提升\")]),s._v(\"，而包括\"),a(\"code\",[s._v(\"函数表达式\")]),s._v(\"的赋值在内的赋值操作并不会\"),a(\"code\",[s._v(\"提升\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"要注意避免重复声明！否则会引起很多意想不到的问题\")])])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"作用域闭包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#作用域闭包\"}},[s._v(\"#\")]),s._v(\" 作用域闭包\")]),s._v(\" \"),a(\"p\",[s._v(\"本文的重头戏\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"终于隆重登场了，想必这个近乎神话的概念，曾经也让不少同学痛苦不堪。今天就让我们在对\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"有了透彻的理解之后，再来揭开\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的神秘面纱。引用原文的一段话：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"闭包是基于词法作用域书写代码时所产生的自然结果，你甚至不需要为了利用它们而有意识地创建闭包。闭包的创建和使用在你的代码中随处可见。你缺少的是根据你自己的意愿来识别、拥抱和影响闭包的思维环境。\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"闭包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#闭包\"}},[s._v(\"#\")]),s._v(\" 闭包\")]),s._v(\" \"),a(\"p\",[s._v(\"首先回顾一下闭包的定义：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数是在当前词法作用域之外执行。\\n我们用一段代码来解释一下：\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"bar\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"bar\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"p\",[s._v(\"从\"),a(\"code\",[s._v(\"嵌套作用域\")]),s._v(\"的知识我们可以了解到，基于\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"的查找规则，函数\"),a(\"code\",[s._v(\"bar\")]),s._v(\"可以访问\"),a(\"code\",[s._v(\"外部作用域\")]),s._v(\"中的变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"。而这种基于\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"的规则，就是\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"最核心的一部分。从学术的角度说，函数\"),a(\"code\",[s._v(\"bar\")]),s._v(\"其实已经拥有了一个涵盖\"),a(\"code\",[s._v(\"fn\")]),s._v(\"作用域的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"，也可以理解成\"),a(\"code\",[s._v(\"bar\")]),s._v(\"封闭在了\"),a(\"code\",[s._v(\"fn\")]),s._v(\"的作用域中，但是通过这种方式定义的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"并不能直接进行观察，我们换一种写法：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"bar\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" bar\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" baz \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"baz\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出2，这就是闭包的效果\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\")])]),a(\"p\",[s._v(\"在\"),a(\"code\",[s._v(\"fn\")]),s._v(\"执行后，因为我们知道由于看上去\"),a(\"code\",[s._v(\"fn\")]),s._v(\"的内容不会再被使用，所以很自然地会期待引擎的\"),a(\"code\",[s._v(\"垃圾回收器\")]),s._v(\"来释放不再使用的内存空间，从而销毁\"),a(\"code\",[s._v(\"fn\")]),s._v(\"的整个\"),a(\"code\",[s._v(\"内部作用域\")]),s._v(\"，对其进行回收。而\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的“神奇”之处正是可以阻止这件事情的发生。事实上\"),a(\"code\",[s._v(\"内部作用域\")]),s._v(\"依然存在，因此没有被回收。谁在使用这个\"),a(\"code\",[s._v(\"内部作用域\")]),s._v(\"呢，正是\"),a(\"code\",[s._v(\"bar\")]),s._v(\"本身。在这个例子中，\"),a(\"code\",[s._v(\"var baz = fn()\")]),s._v(\"创建了\"),a(\"code\",[s._v(\"baz\")]),s._v(\"对\"),a(\"code\",[s._v(\"bar\")]),s._v(\"的引用，因此执行\"),a(\"code\",[s._v(\"baz\")]),s._v(\"就相当于执行了内部的函数\"),a(\"code\",[s._v(\"bar\")]),s._v(\"，也就相当于\"),a(\"code\",[s._v(\"bar\")]),s._v(\"在自身\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"之外执行了（本例在\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"进行了执行），并访问到了自身所在\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"中的变量\"),a(\"code\",[s._v(\"a\")]),s._v(\"，这就完全跟概念吻合上了。\")]),s._v(\" \"),a(\"p\",[s._v(\"再看另外两个例子：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"bar\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"baz\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"bar\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"baz\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//这里同样也是闭包\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\")])]),a(\"p\",[s._v(\"我们可以发现，无论使用何种方式对函数类型的值进行传递，当函数在别处被调用时都可以观察到\"),a(\"code\",[s._v(\"闭包\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"无论通过何种手段将内部函数传递到所在的\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"以外，它都会持有对原始定义\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"的引用，无论在何处执行这个函数都会使用\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"。\")])]),s._v(\" \"),a(\"p\",[s._v(\"上述代码可能有点刻意而为之，但我保证看了下面的例子，你会发现闭包其实在你的编码过程中无处不在：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wait\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"msg\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"timer\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"wait\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//1s后执行timer输出hello\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\")])]),a(\"p\",[s._v(\"函数\"),a(\"code\",[s._v(\"timer\")]),s._v(\"具有涵盖\"),a(\"code\",[s._v(\"wait\")]),s._v(\"的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"，因此还保留有对\"),a(\"code\",[s._v(\"msg\")]),s._v(\"的引用\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//使用jQuery\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"clickHandler\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"el\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" name\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"$\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"el\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"click\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"active\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'clicked:'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"clickHandler\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'#btn1'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'btn1'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//单击btn1，相当于执行active，输出‘clicked btn1’\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"clickHandler\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'#btn2'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'btn2'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//单击btn2，相当于执行active，输出‘clicked btn2’\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\")])]),a(\"p\",[s._v(\"函数\"),a(\"code\",[s._v(\"active\")]),s._v(\"具有涵盖\"),a(\"code\",[s._v(\"clickHandler\")]),s._v(\"的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"，因此还保留有对\"),a(\"code\",[s._v(\"name\")]),s._v(\"的引用\")]),s._v(\" \"),a(\"p\",[s._v(\"引用原文的表述：\")]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"本质上无论何时何地，如果将（访问它们各自\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"的）函数当作第一级的值类型并到处传递，你就会看到\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"在这些函数中的应用。在定时器、事件监听器、Ajax请求、跨窗口通信、Web Workers或者任何其他的异步（或者同步）任务中，只要使用了\"),a(\"code\",[s._v(\"回调函数\")]),s._v(\"，实际上就是在使用\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"！\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"立即执行函数与闭包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#立即执行函数与闭包\"}},[s._v(\"#\")]),s._v(\" 立即执行函数与闭包\")]),s._v(\" \"),a(\"p\",[s._v(\"关于\"),a(\"code\",[s._v(\"立即执行函数\")]),s._v(\"：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//hello\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"严格来讲它并不是\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"。因为函数并不是在它本身的\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"以外执行，而是在\"),a(\"code\",[s._v(\"全局作用域\")]),s._v(\"执行。\"),a(\"code\",[s._v(\"msg\")]),s._v(\"是通过普通的\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"查找而非\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"被发现的。\")]),s._v(\" \"),a(\"p\",[a(\"code\",[s._v(\"立即执行函数\")]),s._v(\"是最常用来创建可以被封闭起来的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的工具，例如：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" sayHello \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" msg \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"msg\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sayHello\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//hello\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"循环与闭包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#循环与闭包\"}},[s._v(\"#\")]),s._v(\" 循环与闭包\")]),s._v(\" \"),a(\"p\",[s._v(\"回忆之前讲\"),a(\"code\",[s._v(\"let\")]),s._v(\"时提到，可以通过\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"解决循环内部输出理想值的问题，其实也可以通过闭包来解决：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"j\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"j\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//依次输出0,1,2,3,4,5,6,7,8,9\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"p\",[s._v(\"就如同\"),a(\"code\",[s._v(\"let\")]),s._v(\"创建\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"一样，每次循环都通过\"),a(\"code\",[s._v(\"立即执行函数\")]),s._v(\"创建了封闭的\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"，而每一个定时器中的\"),a(\"code\",[s._v(\"回调函数\")]),s._v(\"都保持着对这个\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"中变量\"),a(\"code\",[s._v(\"j\")]),s._v(\"的引用，这个变量\"),a(\"code\",[s._v(\"j\")]),s._v(\"实际就是我们传入的值\"),a(\"code\",[s._v(\"i\")]),s._v(\"，因此每次绑定的\"),a(\"code\",[s._v(\"j\")]),s._v(\"值都是不一样的，最终才会依次输出0到9\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"模块\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#模块\"}},[s._v(\"#\")]),s._v(\" 模块\")]),s._v(\" \"),a(\"p\",[a(\"code\",[s._v(\"模块\")]),s._v(\"也是一种利用\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"强大威力的编码方式，一种最简单的写法就是：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"Module\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" food \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'apple'\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" water \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'water'\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"eat\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'eat '\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" food\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"drink\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'drink '\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" water\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        eat\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" eat\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        drink\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" drink\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" fn \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"Module\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\nfn\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"eat\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//eat apple\")]),s._v(\"\\nfn\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"drink\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//drink water\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\")])]),a(\"blockquote\",[a(\"p\",[a(\"code\",[s._v(\"eat\")]),s._v(\"和\"),a(\"code\",[s._v(\"drink\")]),s._v(\"函数具有涵盖模块实例内部\"),a(\"code\",[s._v(\"作用域\")]),s._v(\"的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"（通过调用\"),a(\"code\",[s._v(\"Module\")]),s._v(\"实现）。当通过返回一个含有属性引用的对象的方式来将函数传递到\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"外部时，我们已经创造了可以观察和实践\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的条件。\")])]),s._v(\" \"),a(\"p\",[a(\"code\",[s._v(\"ES6\")]),s._v(\"中为\"),a(\"code\",[s._v(\"模块\")]),s._v(\"增加了一级语法支持。在通过\"),a(\"code\",[s._v(\"模块系统\")]),s._v(\"进行加载时，\"),a(\"code\",[s._v(\"ES6\")]),s._v(\"会将文件当作独立的\"),a(\"code\",[s._v(\"模块\")]),s._v(\"来处理。每个\"),a(\"code\",[s._v(\"模块\")]),s._v(\"都可以导入其他\"),a(\"code\",[s._v(\"模块\")]),s._v(\"或特定的API成员，同样也可以导出自己的API成员。\\n关于\"),a(\"code\",[s._v(\"ES6\")]),s._v(\"中的\"),a(\"code\",[s._v(\"模块\")]),s._v(\"本文不做展开。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"总结-5\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结-5\"}},[s._v(\"#\")]),s._v(\" 总结\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[s._v(\"当\"),a(\"code\",[s._v(\"函数\")]),s._v(\"可以记住并访问所在的\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"，即使\"),a(\"code\",[s._v(\"函数\")]),s._v(\"是在当前\"),a(\"code\",[s._v(\"词法作用域\")]),s._v(\"之外执行，这时就产生了\"),a(\"code\",[s._v(\"闭包\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"立即执行函数\")]),s._v(\"并不等于\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"，但是是最常用来创建可以被封闭起来的\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的工具\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"利用\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的特性可以在循环中实现\"),a(\"code\",[s._v(\"块作用域\")]),s._v(\"的效果\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"可以利用\"),a(\"code\",[s._v(\"闭包\")]),s._v(\"的特性来实现\"),a(\"code\",[s._v(\"模块\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"闭包\")]),s._v(\"无处不在\")])])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"结语\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#结语\"}},[s._v(\"#\")]),s._v(\" 结语\")]),s._v(\" \"),a(\"div\",{staticClass:\"custom-block warning\"},[a(\"p\",{staticClass:\"custom-block-title\"},[s._v(\"注：\")]),s._v(\" \"),a(\"p\",[s._v(\"下篇文章将会把《你不知道的JavaScript（上卷）》后半部分梳理完，涉及的知识点包括：\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"this\")]),s._v(\" \"),a(\"li\",[s._v(\"对象\")]),s._v(\" \"),a(\"li\",[s._v(\"类\")]),s._v(\" \"),a(\"li\",[s._v(\"原型\")]),s._v(\" \"),a(\"li\",[s._v(\"委托\")])]),s._v(\" \"),a(\"p\",[s._v(\"敬请期待···\")]),s._v(\" \"),a(\"hr\"),s._v(\" \"),a(\"div\",{staticStyle:{\"text-align\":\"center\"}},[a(\"a\",{attrs:{rel:\"license\",href:\"http://creativecommons.org/licenses/by-nc-sa/3.0/cn/\"}},[a(\"img\",{staticStyle:{\"border-width\":\"0\"},attrs:{alt:\"知识共享许可协议\",src:\"https://i.creativecommons.org/l/by-nc-sa/3.0/cn/88x31.png\"}})]),a(\"br\"),s._v(\"本作品采用\"),a(\"a\",{attrs:{rel:\"license\",href:\"http://creativecommons.org/licenses/by-nc-sa/3.0/cn/\"}},[s._v(\"知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议\")]),s._v(\"进行许可。\\n\")])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}